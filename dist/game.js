class Element{constructor(game,x,y,img){this.game=game,this.x=x,this.y=y,this.img=img,this.posX=this.x/this.game.blockHeight,this.posY=this.y/this.game.blockWidth}moveSprite(direction,distance){"left"!==direction&&direction!==LEFT_ARROW||(this.x-=this.game.blockWidth*distance),"right"!==direction&&direction!==RIGHT_ARROW||(this.x+=this.game.blockWidth*distance),"up"!==direction&&direction!==UP_ARROW||(this.y-=this.game.blockHeight*distance),"down"!==direction&&direction!==DOWN_ARROW||(this.y+=this.game.blockHeight*distance),redraw()}show(){this.game.sketch.image(this.img,this.x,this.y,this.game.blockHeight,this.game.blockWidth)}}class MovableElement extends Element{constructor(game,x,y,img){super(game,x,y,img)}}class Boulder extends MovableElement{constructor(game,x,y,img){super(game,x,y,img)}}class StaticElement extends Element{constructor(game,x,y,img){super(game,x,y,img)}}class Door extends StaticElement{constructor(game,x,y,img){super(game,x,y,img),this.isOpen=!1,this.isDoor=!0}open(){this.isOpen=!0,this.img=this.game.sketch.loadImage(`${this.game.assetsBasePath}/${this.game.mapName.template}/openDoorImg.png`),this.game.sketch.redraw()}close(){this.isOpen=!1,this.img=this.game.sketch.loadImage(`${this.game.assetsBasePath}/${this.game.mapName.template}/doorImg.png`),this.game.sketch.redraw()}}class Protagonist extends MovableElement{constructor(game,x,y,img){super(game,x,y,img),this.isProtagonist=!0,this.objective=0}}class Objective extends MovableElement{constructor(game,x,y,img){super(game,x,y,img),this.isObjective=!0}}class Road extends MovableElement{constructor(game,x,y,img){super(game,x,y,img)}}class Tree extends StaticElement{constructor(game,x,y,img){super(game,x,y,img)}}const classes={Boulder:Boulder,Door:Door,Protagonist:Protagonist,Objective:Objective,Road:Road,Tree:Tree};class DynamicElement{constructor(game,className,x,y,img){return new classes[className](game,x,y,img)}}var tutorial={name:"pokemonTutorial",template:"pokemon",background:"#77ff33",music:"pokemon.mp3",pattern:[[9,9,9,4,4,4,4,4,4,4,4,4,4,4,4,4],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,4],[4,9,9,9,3,3,1,3,4,9,9,9,9,9,9,4],[4,9,9,9,9,9,9,9,9,9,9,9,9,9,9,4],[4,9,9,1,1,1,3,9,9,9,9,9,3,9,9,9],[4,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[4,9,9,9,9,9,9,2,9,9,9,9,9,9,9,4],[4,9,9,9,9,9,9,0,9,9,9,9,9,9,9,4],[4,9,9,9,9,9,9,9,9,9,9,9,9,9,9,4],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,4],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[4,9,9,9,9,9,9,3,9,9,9,9,1,9,9,4],[4,9,4,4,9,9,3,3,3,9,9,1,1,1,9,4],[4,9,4,4,9,9,9,3,9,9,9,9,1,9,9,4],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9]],e:{0:Protagonist,1:Objective,2:Door,3:Boulder,4:Tree,9:Road}},nemo={name:"nemo",template:"nemo",background:"#3a7eea",music:"",pattern:[[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],[4,9,9,4,1,9,9,9,4,9,9,9,9,9,9,4],[4,9,9,4,4,9,4,9,4,9,9,9,9,9,3,9],[4,9,9,3,9,9,9,9,4,9,3,3,3,3,9,4],[4,9,9,9,3,4,4,9,4,9,3,1,9,9,3,9],[4,9,9,9,9,4,9,9,4,9,3,1,9,3,9,4],[4,4,9,9,9,9,4,2,4,9,3,3,3,3,1,4],[4,9,9,9,4,9,9,9,4,0,1,9,9,3,3,4],[4,4,4,4,4,9,9,9,9,9,9,9,9,9,9,4],[4,9,9,9,9,9,9,9,9,4,4,4,1,4,4,4],[4,9,9,9,9,9,9,9,9,4,1,4,9,9,9,4],[4,9,9,9,9,9,9,9,9,4,9,4,4,4,9,4],[4,3,3,9,9,9,3,9,9,4,9,4,9,3,9,4],[4,1,3,9,3,9,9,9,9,4,9,9,3,9,9,4],[4,9,1,9,3,9,9,1,3,1,9,9,9,3,9,4],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]],e:{0:Protagonist,1:Objective,2:Door,3:Boulder,4:Tree,9:Road}},pokemon1={name:"pokemon1",template:"pokemon",background:"",music:"",pattern:[[9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,2],[1,4,3,4,4,4,4,4,4,4,4,4,4,4,4,4],[9,4,9,1,9,1,9,1,9,1,9,1,9,1,9,4],[1,4,1,4,3,4,4,4,4,4,4,4,4,4,1,4],[9,4,9,4,9,1,9,1,9,1,9,1,9,3,9,4],[1,4,1,4,1,4,4,4,4,4,4,4,1,4,1,4],[9,4,9,4,9,4,9,1,9,1,9,3,9,4,9,4],[1,4,1,4,1,4,1,3,4,4,1,4,1,4,1,4],[9,4,9,4,9,3,9,1,0,4,9,4,9,4,9,4],[1,4,1,4,1,4,4,4,4,4,1,4,1,4,1,4],[9,4,9,4,9,1,9,1,9,1,9,4,9,4,9,4],[1,4,1,4,4,4,4,4,4,4,3,4,1,4,1,4],[9,3,9,1,9,1,9,1,9,1,9,1,9,4,9,4],[1,4,4,4,4,4,4,4,4,4,4,4,3,4,1,4],[9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,4],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]],e:{0:Protagonist,1:Objective,2:Door,3:Boulder,4:Tree,9:Road}},zeldaGreen={name:"zeldaGreen",template:"zelda",background:"#619b1f",music:"lostWoods.mp3",pattern:[[0,3,9,9,9,9,1,9,9,4,4,1,1,4,1,4],[9,3,9,9,4,4,4,4,9,4,4,1,1,4,9,4],[4,9,4,4,9,9,9,4,9,9,3,9,4,1,9,1],[1,3,9,3,9,9,9,1,4,3,4,9,4,1,3,1],[4,9,4,4,4,4,4,9,4,9,4,9,9,4,9,4],[1,9,9,9,3,9,9,9,3,9,4,9,9,9,9,4],[4,4,9,9,9,4,9,4,4,1,4,4,4,9,9,4],[4,9,4,9,4,9,9,4,9,9,9,9,4,9,9,9],[9,9,4,4,9,9,4,4,1,3,1,9,4,4,3,9],[9,4,4,4,9,4,4,4,3,2,3,9,4,9,9,9],[9,9,4,4,9,3,9,4,1,3,1,9,4,9,9,9],[4,9,9,9,9,9,9,4,9,9,9,9,9,9,9,9],[9,9,4,4,4,4,4,4,4,4,4,4,9,4,4,4],[9,4,4,9,9,9,9,4,1,3,3,9,3,9,3,9],[9,9,4,9,4,9,1,3,9,9,9,3,9,3,9,9],[4,9,9,9,4,9,9,4,9,9,9,3,9,9,9,9]],e:{0:Protagonist,1:Objective,2:Door,3:Boulder,4:Tree,9:Road}},davide={name:"davide",template:"davide",background:"#23c63e",music:"davide.mp3",pattern:[[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],[9,9,9,9,9,4,4,9,2,9,4,4,9,9,9,9],[9,9,9,9,4,4,4,4,9,4,4,4,4,9,9,9],[9,9,9,4,4,1,1,4,4,4,1,1,4,4,9,9],[9,9,4,4,1,1,1,1,4,1,1,1,1,4,4,9],[9,9,4,4,1,1,1,1,1,1,1,1,1,4,4,9],[9,9,4,4,1,1,1,1,1,1,1,1,1,4,4,9],[9,9,4,4,1,1,1,1,0,1,1,1,1,4,4,9],[9,9,9,4,4,1,1,1,1,1,1,1,4,4,9,9],[9,9,9,9,4,4,1,1,3,1,1,4,4,9,9,9],[9,9,9,9,9,4,4,1,1,1,4,4,9,9,9,9],[9,9,9,9,9,9,4,4,1,4,4,9,9,9,9,9],[9,9,9,9,9,9,9,4,4,4,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,4,9,9,9,9,9,9,9],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9]],e:{0:Protagonist,1:Objective,2:Door,3:Boulder,4:Tree,9:Road}},testHeavyMap={name:"testHeavyMap",template:"zeldaRed",background:"#dd7a37",music:"zeldaRed.mp3",pattern:[[4,4,4,4,4,4,4,4,4,1,4,4,4,4,4,4],[4,9,3,1,3,1,1,3,1,9,9,9,9,3,9,4],[4,9,9,9,4,1,1,3,1,3,9,3,9,3,9,4],[4,9,4,9,4,1,9,9,3,9,3,9,3,4,1,4],[4,9,4,9,4,3,9,3,9,3,9,9,9,3,9,9],[4,1,4,9,4,9,3,9,3,9,1,9,1,3,4,4],[4,9,4,1,4,3,9,3,4,4,4,4,4,9,3,4],[4,9,4,9,4,9,9,9,3,9,4,4,9,4,9,4],[4,9,4,9,4,3,4,3,4,9,4,4,9,2,9,4],[4,9,4,9,4,1,3,1,4,1,4,4,4,9,4,4],[4,1,4,9,4,1,1,1,4,1,4,9,4,9,4,4],[4,9,4,9,4,9,3,9,9,9,4,9,4,9,4,4],[4,9,4,9,4,3,9,9,4,9,4,9,4,9,4,4],[4,9,4,9,4,4,4,4,4,9,4,4,4,9,4,4],[4,0,4,9,9,9,9,9,9,9,9,9,9,9,4,4],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4]],e:{0:Protagonist,1:Objective,2:Door,3:Boulder,4:Tree,9:Road}};class Game{constructor({element:element,assetsBasePath:assetsBasePath,console:console}){this.setProduction=!0,this.el=element,this.assetsBasePath=assetsBasePath,this.console=console,this.HEIGHT=this.el.offsetHeight,this.WIDTH=this.el.offsetWidth,this.DEFAULTBGCOLOR="#77ff33",this.background=this.DEFAULTBGCOLOR,this.firstLaunch=!0,this.levels=[tutorial,pokemon1,nemo,zeldaGreen,testHeavyMap,davide],this.objectives=0,this.level=0,this.mapElement=[],this.mapName=tutorial,this.musicBasePath="music",this.sounds=[`${this.assetsBasePath}/${this.musicBasePath}/pokemon.mp3`,`${this.assetsBasePath}/${this.musicBasePath}/lostWoods.mp3`,`${this.assetsBasePath}/${this.musicBasePath}/davide.mp3`,`${this.assetsBasePath}/${this.musicBasePath}/bonus.mp3`,`${this.assetsBasePath}/${this.musicBasePath}/zeldaRed.mp3`],this.idx=0,this.musicLoaded=[],this.musicPlaying=!1,this.volume=1;this.myp5=new window.p5(sketch=>{this.sketch=sketch,sketch.preload=(()=>{this.preload()}),sketch.setup=(()=>{this.setup()}),sketch.draw=(()=>{this.draw()}),sketch.keyPressed=(()=>{this.keyPressed()}),sketch.keyTyped=(()=>{this.keyTyped()})},this.el)}preload(mapName){mapName&&(this.mapName=mapName);for(let ele in this.mapName.e){let eName=this.mapName.e[ele].name.toLowerCase();this[eName]=null,"road"!=eName?this[eName+"Img"]=this.sketch.loadImage(`${this.assetsBasePath}/${this.mapName.template}/${eName}Img.png`):this[eName+"Img"]=null}if(this.firstLaunch){this.sketch.shuffle(this.sounds,!0);for(let s of this.sounds)this.musicLoaded.push(this.sketch.loadSound(s))}}setup(){null==this.mapName&&(this.mapName=tutorial),this.sketch.createCanvas(this.HEIGHT,this.WIDTH),this.columns=this.mapName.pattern.length,this.rows=this.mapName.pattern[0].length,this.blockHeight=this.sketch.floor(this.HEIGHT/this.rows),this.blockWidth=this.sketch.floor(this.WIDTH/this.columns),this.iterateOverMap(),this.mapName==tutorial&&this.firstLaunch&&(this.getMusicIndex("pokemon.mp3")&&(this.idx=this.getMusicIndex("pokemon.mp3")),this.firstLaunch=!1)}draw(){this.sketch.background(this.background);for(let y=0;y<this.columns;y++)for(let x=0;x<this.rows;x++)"Road"!=this.mapElement[x][y].constructor.name&&this.mapElement[x][y].show()}iterateOverMap(){null==this.mapName&&(this.mapName=tutorial);for(let i=0;i<this.rows;i++)this.mapElement[i]=new Array(this.columns);for(let y=0;y<this.columns;y++)for(let x=0;x<this.rows;x++){let idElement=this.mapName.pattern[y][x],element=this.mapName.e[idElement].name,elementImg=element.toLowerCase()+"Img";this.mapElement[x][y]=new DynamicElement(this,element,x*this.blockWidth,y*this.blockHeight,this[elementImg]),this.mapElement[x][y].isProtagonist&&(this.protagonist=this.mapElement[x][y]),this.mapElement[x][y].isObjective&&(this.objectives+=1),this.mapElement[x][y].isDoor&&(this.door=this.mapElement[x][y])}}isInMap(posX,posY,mapXSize,mapYSize,dir,distance){switch(dir){case 37:return!(posX-distance<0);case 38:return!(posY-distance<0);case 39:return!(posX>=mapXSize-distance);case 40:return!(posY>=mapYSize-distance)}return console.warn("key code is not between 37 and 40"),!1}getElement(direction,distance){if(distance<0)return!1;let x=this.protagonist.posX,y=this.protagonist.posY,element=null;if(!this.isInMap(x,y,this.columns,this.rows,direction,distance))return this.console.error("Can't get element out of map !"),!1;if("left"===direction||direction===this.sketch.LEFT_ARROW)(element=this.mapElement[x-distance][y]).isObjective&&(this.objective=element);else if("right"===direction||direction===this.sketch.RIGHT_ARROW)(element=this.mapElement[x+distance][y]).isObjective&&(this.objective=element);else if("up"===direction||direction===this.sketch.UP_ARROW)(element=this.mapElement[x][y-distance]).isObjective&&(this.objective=element);else{if("down"!==direction&&direction!==this.sketch.DOWN_ARROW)return null;(element=this.mapElement[x][y+distance]).isObjective&&(this.objective=element)}return element.constructor.name.toString()}swapSprite(direction,distanceFrom,distanceTo){if(distanceFrom>distanceTo)throw"Parameter 'distanceTo' has to be >= than 'distanceFrom'";if(distanceFrom>=this.rows||distanceTo>=this.rows)throw"Parameters cant be higher that the size of map";let x=this.protagonist.posX,y=this.protagonist.posY,s=this.sketch;if(!this.isInMap(x,y,this.columns,this.rows,direction,distanceTo))return this.console.error("Can't swap element out of map !"),!1;if("right"===direction||direction===s.RIGHT_ARROW){let temp=this.mapElement[x+distanceFrom][y];this.mapElement[x+distanceFrom][y]=this.mapElement[x+distanceTo][y],this.mapElement[x+distanceTo][y]=temp}if("left"===direction||direction===s.LEFT_ARROW){let temp=this.mapElement[x-distanceFrom][y];this.mapElement[x-distanceFrom][y]=this.mapElement[x-distanceTo][y],this.mapElement[x-distanceTo][y]=temp}if("down"===direction||direction===s.DOWN_ARROW){let temp=this.mapElement[x][y+distanceFrom];this.mapElement[x][y+distanceFrom]=this.mapElement[x][y+distanceTo],this.mapElement[x][y+distanceTo]=temp}if("up"===direction||direction===s.UP_ARROW){let temp=this.mapElement[x][y-distanceFrom];this.mapElement[x][y-distanceFrom]=this.mapElement[x][y-distanceTo],this.mapElement[x][y-distanceTo]=temp}return this.refreshPos(),!0}getXMapSize(){return this.columns}getYMapSize(){return this.rows}getPosX(){return this.protagonist.posX}getPosY(){return this.protagonist.posY}getObjectives(){return this.objectives.toString()}takeObjective(){try{return this.mapElement[this.objective.posX][this.objective.posY]=new Road(this,this.objective.x,this.objective.y,"roadImg"),this.objectives-=1,this.objective.posX=null,this.objective.posY=null,!0}catch{this.console.warning("No objective at this position")}return!1}isDoorOpen(){return this.mapElement[this.door.posX][this.door.posY].isOpen}openDoor(){return 0!=this.objectives?(this.console.warning("You can't open door while there is still existing objective"),!1):(this.mapElement[this.door.posX][this.door.posY].open(),!0)}closeDoor(){return!this.mapElement[this.door.posX][this.door.posY].isOpen&&(this.mapElement[this.door.posX][this.door.posY].close(),!0)}loadLevel(level){if(level>=0&&level<this.levels.length)return this.level=level-1,this.nextLevel(),!0;throw"Level doesn't exist"}nextLevel(){return this.setProduction&&!this.isDoorOpen()?(this.console.warning("You can't access the next level, the door is close.. Why ?"),!1):(this.level+=1,this.level>=this.levels.length&&(this.level=0),this.mapName=this.levels[this.level],""!=this.mapName.background&&"string"==typeof this.mapName.background?this.background=this.mapName.background:this.background=this.DEFAULTBGCOLOR,""!=this.mapName.music&&"string"==typeof this.mapName.music&&this.setMusic(this.mapName.music),this.objectives=0,this.preload(this.mapName),this.setup(),!0)}writeConsole(value){return this.console.log(value.toString()),!0}getCurrentLevelName(){return this.levels[this.level].name}getLevelName(level){if(level<this.levels.length)for(const[index]of this.levels.entries())if(this.levels[index].name==this.levels[level].name)return this.levels[level].name;return!1}getCurrentMusic(){return this.musicLoaded[this.idx].url}getMusicIndex(musicName){for(const[index]of this.musicLoaded.entries())if(this.musicLoaded[index].url==`${this.assetsBasePath}/${this.musicBasePath}/${musicName}`)return index;return!1}setMusic(musicName){for(const[index]of this.musicLoaded.entries())this.musicLoaded[index].url==`${this.assetsBasePath}/${this.musicBasePath}/${musicName}`&&(this.musicPlaying?(this.musicLoaded[this.idx].stop(),this.idx=index,this.musicLoaded[this.idx].loop()):this.idx=index);return!0}keyTyped(){switch(this.sketch.key){case"M":this.musicPlaying?(this.musicLoaded[this.idx].pause(),this.musicPlaying=!1):(this.musicLoaded[this.idx].loop(0,1,this.volume),this.musicPlaying=!0);break;case"N":this.musicLoaded[this.idx].stop(),this.idx+=1,this.idx>=this.musicLoaded.length&&(this.idx=0),this.musicLoaded[this.idx].loop(0,1,this.volume),this.musicPlaying=!0;break;case"B":this.musicLoaded[this.idx].stop(),this.idx=this.idx-1,this.idx<0&&(this.idx=this.musicLoaded.length-1),this.musicLoaded[this.idx].loop(0,1,this.volume),this.musicPlaying=!0;break;case"+":this.volume+.05>=1?this.volume=1:this.volume+=.05,this.musicLoaded[this.idx].setVolume(this.volume);break;case"-":this.volume-.05<=0?this.volume=0:this.volume-=.05,this.musicLoaded[this.idx].setVolume(this.volume);break;case"R":this.objectives=0,this.setup(this.mapName)}!this.setProduction&&this.sketch.key>=0&&this.sketch.key<=this.levels.length-1&&this.loadLevel(this.sketch.key)}keyPressed(){return!0}refreshPos(){for(let y=0;y<this.columns;y++)for(let x=0;x<this.rows;x++)this.mapElement[x][y].x=x*this.blockWidth,this.mapElement[x][y].posX=x,this.mapElement[x][y].y=y*this.blockHeight,this.mapElement[x][y].posY=y}waitUntilKeyPressed(){return console.log("Wait the user to press an arrow key !"),new Promise(resolve=>{document.addEventListener("keyup",resolve,{once:!0})})}async executeGameCommand(command){switch((command=JSON.parse(command)).action){case"isInMap":return this.isInMap(command.params[0],command.params[1],command.params[2],command.params[3],command.params[4],command.params[5]);case"waitUntilKeyPressed":return(await this.waitUntilKeyPressed()).keyCode;case"getElement":return this.getElement(command.params[0],command.params[1]);case"swapSprite":return this.swapSprite(command.params[0],command.params[1],command.params[2]);case"getObjectives":return this.getObjectives();case"takeObjective":return this.takeObjective();case"isDoorOpen":return this.isDoorOpen();case"openDoor":return this.openDoor();case"closeDoor":return this.closeDoor();case"nextLevel":return this.setProduction&&!this.isDoorOpen()?(this.console.warning("Can't access next level"),!1):this.nextLevel();case"loadLevel":return this.loadLevel(command.params);case"getCurrentLevelName":return this.getCurrentLevelName();case"getLevelName":return this.getLevelName();case"getXMapSize":return this.getXMapSize();case"getYMapSize":return this.getYMapSize();case"getPosX":return this.getPosX();case"getPosY":return this.getPosY();case"getCurrentMusic":return this.getCurrentMusic();case"getMusicIndex":return this.getMusicIndex();case"setMusic":return this.setMusic(command.params);case"writeConsole":return this.writeConsole(command.params)}}}export{Game};
